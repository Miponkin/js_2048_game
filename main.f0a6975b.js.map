{"version":3,"sources":["scripts/main.js"],"names":["field","scoreCount","startButton","document","querySelector","cells","loseMessage","winMessage","startMessage","score","CELLS_IN_ROW","startGame","Array","from","length","fill","rndCell","keyboardListener","rowIdx","Math","floor","random","columnIdx","renderCells","innerHTML","i","row","createElement","j","cell","className","textContent","appendChild","addEventListener","keyAction","e","compareField","JSON","parse","stringify","key","ArrowUp","ArrowDown","ArrowRight","ArrowLeft","hasFieldChanged","haveMoves","classList","remove","removeEventListener","isWin","newRow","canMove","move","reverse","replaceZeros","canMerge","canSlide","haveFreeCells","some","haveMerges","filter","num","push","contains","add"],"mappings":"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","file":"main.f0a6975b.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst cells = document.querySelector('tbody');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startMessage = document.querySelector('.message-start');\nconst score = document.querySelector('.game-score');\nconst CELLS_IN_ROW = 4;\nlet field;\nlet scoreCount;\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n    startMessage.classList.add('hidden');\n    startGame();\n    score.textContent = scoreCount;\n  } else {\n    startGame();\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n    score.textContent = scoreCount;\n  }\n});\n\nfunction startGame() {\n  field = Array.from({ length: CELLS_IN_ROW },\n    () => Array(CELLS_IN_ROW).fill(0));\n  scoreCount = 0;\n  rndCell();\n  keyboardListener();\n}\n\nfunction rndCell() {\n  while (true) {\n    const rowIdx = Math.floor(Math.random() * CELLS_IN_ROW);\n    const columnIdx = Math.floor(Math.random() * CELLS_IN_ROW);\n\n    if (field[rowIdx][columnIdx] === 0) {\n      field[rowIdx][columnIdx] = Math.random() < 0.9 ? 2 : 4;\n      break;\n    }\n  }\n\n  renderCells();\n}\n\nfunction renderCells() {\n  cells.innerHTML = '';\n\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    const row = document.createElement('tr');\n\n    for (let j = 0; j < CELLS_IN_ROW; j++) {\n      const cell = document.createElement('td');\n\n      cell.className = `field-cell field-cell--${field[i][j]}`;\n      cell.textContent = field[i][j] || '';\n      row.appendChild(cell);\n    }\n    cells.appendChild(row);\n  }\n}\n\nfunction keyboardListener() {\n  document.addEventListener('keydown', keyAction);\n}\n\nfunction keyAction(e) {\n  const compareField = JSON.parse(JSON.stringify(field));\n\n  switch (e.key) {\n    case 'ArrowUp':\n    case 'W':\n    case 'w':\n      ArrowUp();\n      break;\n\n    case 'ArrowDown':\n    case 'S':\n    case 's':\n      ArrowDown();\n      break;\n\n    case 'ArrowRight':\n    case 'D':\n    case 'd':\n      ArrowRight();\n      break;\n\n    case 'ArrowLeft':\n    case 'A':\n    case 'a':\n      ArrowLeft();\n      break;\n\n    default:\n      break;\n  }\n\n  if (hasFieldChanged(compareField)) {\n    rndCell();\n    score.textContent = scoreCount;\n  }\n\n  if (!haveMoves()) {\n    loseMessage.classList.remove('hidden');\n    document.removeEventListener('keydown', keyAction);\n  }\n\n  if (isWin()) {\n    winMessage.classList.remove('hidden');\n  }\n}\n\nfunction ArrowUp() {\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    let newRow = [\n      field[0][i],\n      field[1][i],\n      field[2][i],\n      field[3][i],\n    ];\n\n    if (canMove(newRow)) {\n      newRow = move(newRow);\n\n      for (let j = 0; j < newRow.length; j++) {\n        field[j][i] = newRow[j];\n      }\n    }\n  }\n}\n\nfunction ArrowDown() {\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    let newRow = [\n      field[0][i],\n      field[1][i],\n      field[2][i],\n      field[3][i],\n    ];\n\n    if (canMove([...newRow].reverse())) {\n      newRow = move(newRow.reverse()).reverse();\n\n      for (let j = 0; j < newRow.length; j++) {\n        field[j][i] = newRow[j];\n      }\n    }\n  }\n}\n\nfunction ArrowLeft() {\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    let newRow = field[i];\n\n    if (canMove(newRow)) {\n      newRow = move(field[i]);\n\n      for (let j = 0; j < newRow.length; j++) {\n        field[i][j] = newRow[j];\n      }\n    }\n  }\n}\n\nfunction ArrowRight() {\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    let newRow = field[i];\n\n    if (canMove([...newRow].reverse())) {\n      newRow = move(newRow.reverse()).reverse();\n\n      for (let j = 0; j < newRow.length; j++) {\n        field[i][j] = newRow[j];\n      }\n    }\n  }\n}\n\nfunction move(row) {\n  let newRow = replaceZeros(row);\n\n  for (let i = 0; i < newRow.length; i++) {\n    if (newRow[i] === newRow[i + 1] && newRow[i] !== 0) {\n      newRow[i] = newRow[i] * 2;\n      newRow[i + 1] = 0;\n      scoreCount += newRow[i];\n    }\n  }\n\n  newRow = replaceZeros(newRow);\n\n  return newRow;\n}\n\nfunction canMove(row) {\n  for (let i = 0; i < row.length - 1; i++) {\n    const canMerge = (row[i] === row[i + 1]) && (row[i] !== 0);\n    const canSlide = (row[i] === 0) && (row[i + 1] !== 0);\n\n    if (canMerge || canSlide) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction haveMoves() {\n  const haveFreeCells = field.some(row => row.some(cell => cell === 0));\n  let haveMerges = false;\n\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    for (let j = 0; j < CELLS_IN_ROW - 1; j++) {\n      if (field[i][j] === field[i][j + 1]) {\n        haveMerges = true;\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < CELLS_IN_ROW - 1; i++) {\n    for (let j = 0; j < CELLS_IN_ROW; j++) {\n      if (field[i][j] === field[i + 1][j]) {\n        haveMerges = true;\n        break;\n      }\n    }\n  }\n\n  return haveFreeCells || haveMerges;\n}\n\nfunction isWin() {\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    for (let j = 0; j < CELLS_IN_ROW; j++) {\n      if (field[i][j] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction replaceZeros(row) {\n  const newRow = row.filter(num => num !== 0);\n\n  while (newRow.length < CELLS_IN_ROW) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction hasFieldChanged(compareField) {\n  for (let i = 0; i < CELLS_IN_ROW; i++) {\n    for (let j = 0; j < CELLS_IN_ROW; j++) {\n      if (compareField[i][j] !== field[i][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}